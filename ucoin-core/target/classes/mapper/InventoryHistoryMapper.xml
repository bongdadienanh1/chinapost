<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylife.inventory.mapper.InventoryHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.ylife.inventory.model.InventoryHistory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="enterprise_id" property="enterpriseId" jdbcType="INTEGER" />
    <result column="goods_info_id" property="goodsInfoId" jdbcType="BIGINT" />
    <result column="inventory_amount" property="inventoryAmount" jdbcType="INTEGER" />
    <result column="available_amount" property="availableAmount" jdbcType="INTEGER" />
    <result column="increase_amount" property="increaseAmount" jdbcType="INTEGER" />
    <result column="instock_amount" property="instockAmount" jdbcType="INTEGER" />
    <result column="transfer_in" property="transferIn" jdbcType="INTEGER" />
    <result column="order_back" property="orderBack" jdbcType="INTEGER" />
    <result column="consume_amount" property="consumeAmount" jdbcType="INTEGER" />
    <result column="transfer_out" property="transferOut" jdbcType="INTEGER" />
    <result column="order_consume" property="orderConsume" jdbcType="INTEGER" />
    <result column="gains_amount" property="gainsAmount" jdbcType="INTEGER" />
    <result column="less_report" property="lessReport" jdbcType="INTEGER" />
    <result column="more_report" property="moreReport" jdbcType="INTEGER" />
    <result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="sum_flag" property="sumFlag" jdbcType="VARCHAR"/>
  </resultMap>

    <resultMap id="InventoryFormResultMap" type="com.ylife.form.model.InventoryHistoryForm" extends="BaseResultMap">
       <result column="last_month_inventory" property="lastMonthInventory" jdbcType="INTEGER"/>
       <result column="goods_info_name" property="goodsInfoName" jdbcType="VARCHAR"/>
       <result column="enterprise_name" property="enterpriseName" jdbcType="VARCHAR"/>
       <result column="goods_spec_string" property="goodsSpecString" jdbcType="VARCHAR"/>
       <result column="goods_info_item_no" property="goodsInfoItemNo" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="FormResultMap" type="com.ylife.form.mapper.pojo.InventoryHsitoryByEnterpriseForm">
        <id property="enterpriseId" column="enterprise_id"/>
        <id property="enterpriseName" column="enterprise_name"/>

        <collection property="formList" ofType="com.ylife.form.model.InventoryHistoryForm" resultMap="InventoryFormResultMap"/>
    </resultMap>


    <select id="sumHistoryByGoods" resultMap="InventoryFormResultMap">
        SELECT
        "合计" as sum_flag,
        sum(yeih.increase_amount) as increase_amount,
        sum(yeih.instock_amount) as instock_amount,
        sum(yeih.transfer_in) as transfer_in,
        sum(yeih.order_back) as order_back,
        sum(yeih.consume_amount) as consume_amount,
        sum(yeih.transfer_out)as transfer_out,
        sum(yeih.order_consume) as order_consume,
        sum(yeih.gains_amount) as gains_amount,
        sum(yeih.less_report) as less_report,
        sum(yeih.more_report) as more_report,
        lastMonth.last_month_inventory,
        sum(yeih.inventory_amount) AS inventory_amount
        FROM
        ysh_enterprise_inventory_history as yeih
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = yeih.enterprise_id
        lEFT JOIN
        (
        SELECT
        enterprise_id,goods_info_id,
        sum(yeih2.inventory_amount) AS last_month_inventory
        FROM
        ysh_enterprise_inventory_history  as yeih2
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = yeih2.enterprise_id
        <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            AND yeih2.record_time = #{start,jdbcType=TIMESTAMP}
        </where>
        ) as lastMonth on lastMonth.enterprise_id=yeih.enterprise_id
        and  yeih.goods_info_id=lastMonth.goods_info_id

        <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            AND yeih.record_time = #{end,jdbcType=TIMESTAMP}
        </where>
    </select>

    <select id="sumHistoryByEnterprise" resultMap="InventoryFormResultMap">
        SELECT
        "合计" as sum_flag,
        yeih.enterprise_id,
        middle.last_month_inventory,
        sum(yeih.inventory_amount) as inventory_amount,
        sum(yeih.increase_amount) as increase_amount,
        sum(yeih.instock_amount) as instock_amount,
        sum(yeih.transfer_in) as transfer_in,
        sum(yeih.order_back) as order_back,
        sum(yeih.consume_amount) as consume_amount,
        sum(yeih.transfer_out) as transfer_out,
        sum(yeih.order_consume) as order_consume,
        sum(yeih.gains_amount)as gains_amount,
        sum(yeih.less_report) as less_report,
        sum(yeih.more_report) as more_report
        from ysh_enterprise_inventory_history as yeih
        left join ysh_enterprise_func as yef on yeih.enterprise_id=yef.id
        left join
        (SELECT yeih2.enterprise_id,
        sum(yeih2.inventory_amount)as last_month_inventory  from
        ysh_enterprise_inventory_history as yeih2
        where record_time= #{end,jdbcType=TIMESTAMP}
        GROUP BY enterprise_id)
        as middle
        on yeih.enterprise_id=middle.enterprise_id
        <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            AND yeih.record_time = #{end,jdbcType=TIMESTAMP}
        </where>
        group by enterprise_id
        <if test="pageable != null">
            limit
            #{pageable.index,jdbcType=BIGINT}, #{pageable.length,jdbcType=BIGINT}
        </if>
    </select>

    <select id="countHistoryByGoodsInfo" resultType="java.lang.Integer">
        SELECT
          count(DISTINCT(ysh_enterprise_inventory_history.goods_info_id))
        FROM
        ysh_enterprise_inventory_history
        left join np_goods_info as ngi on ngi.goods_info_id=ysh_enterprise_inventory_history.goods_info_id
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = ysh_enterprise_inventory_history.enterprise_id
        <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="goodsInfoName!=null">
                and
                ngi.goods_info_name like concat(concat('%', #{goodsInfoName,jdbcType=VARCHAR}),'%')
            </if>
            <if test="goodsInfoItemNo!=null">
                and
                ngi.goods_info_item_no=#{goodsInfoItemNo,jdbcType=VARCHAR}
            </if>
            AND ysh_enterprise_inventory_history.record_time =  #{end,jdbcType=TIMESTAMP}
        </where>
    </select>



    <select id="getHistoryByGoodsInfo" resultMap="InventoryFormResultMap">
        SELECT
        ysh_enterprise_inventory_history.goods_info_id,
        sum(ysh_enterprise_inventory_history.available_amount) as available_amount,
        sum(ysh_enterprise_inventory_history.increase_amount) as increase_amount,
        sum(ysh_enterprise_inventory_history.instock_amount)as instock_amount,
        sum(ysh_enterprise_inventory_history.transfer_in) as transfer_in,
        SUM(ysh_enterprise_inventory_history.order_back) as order_back,
        SUM(ysh_enterprise_inventory_history.consume_amount) as consume_amount,
        SUM(ysh_enterprise_inventory_history.transfer_out) as transfer_out,
        SUM(ysh_enterprise_inventory_history.order_consume) as order_consume,
        SUM(ysh_enterprise_inventory_history.gains_amount) as gains_amount,
        SUM(ysh_enterprise_inventory_history.less_report) as less_report,
        SUM(ysh_enterprise_inventory_history.more_report) as more_report,
        sum(ysh_enterprise_inventory_history.inventory_amount) AS inventory_amount,
        goods_info_name,
        goods_info_item_no,
        lastMonth.last_month_inventory,
        goods_spec_string
        FROM
        ysh_enterprise_inventory_history

        lEFT JOIN (
        SELECT
        goods_ids.goods_info_id,
        ngi.goods_info_name,
        ngi.goods_info_item_no,
        IFNULL(
        GROUP_CONCAT(
        concat(
        gs.spec_name,
        ":",
        IFNULL(gsd.spec_detail_name, "")
        )
        ),
        ""
        ) AS goods_spec_string
        FROM
        (SELECT DISTINCT(ysh_enterprise_inventory_history.goods_info_id)
        FROM ysh_enterprise_inventory_history) AS goods_ids
        LEFT JOIN np_goods_info AS ngi ON ngi.goods_info_id = goods_ids.goods_info_id
        LEFT JOIN np_goods_info_rele_spec_detail AS girsd ON girsd.goods_info_id = ngi.goods_info_id
        LEFT JOIN np_goods_spec AS gs ON gs.spec_id = girsd.spec_id
        LEFT JOIN np_goods_spec_detail AS gsd ON gsd.spec_detail_id = girsd.spec_detail_id
        GROUP BY
        goods_ids.goods_info_id
        ) AS goods_info ON ysh_enterprise_inventory_history.goods_info_id = goods_info.goods_info_id
        left join ysh_enterprise_info as yei on yei.enterprise_id=ysh_enterprise_inventory_history.enterprise_id
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = ysh_enterprise_inventory_history.enterprise_id

        lEFT JOIN
        (
        SELECT
        enterprise_id,goods_info_id,
        sum(yeih2.inventory_amount) AS last_month_inventory
        FROM
        ysh_enterprise_inventory_history  as yeih2
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = yeih2.enterprise_id
       <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            AND yeih2.record_time = #{start,jdbcType=TIMESTAMP}
        </where>
        GROUP BY yeih2.goods_info_id
        ) as lastMonth on  ysh_enterprise_inventory_history.goods_info_id=lastMonth.goods_info_id
        <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="goodsInfoName!=null">
                and
                goods_info.goods_info_name like concat(concat('%', #{goodsInfoName,jdbcType=VARCHAR}),'%')
            </if>
            <if test="goodsInfoItemNo!=null">
                and
                goods_info.goods_info_item_no=#{goodsInfoItemNo,jdbcType=VARCHAR}
            </if>
            AND ysh_enterprise_inventory_history.record_time =#{end,jdbcType=TIMESTAMP}
        </where>
        GROUP BY
        ysh_enterprise_inventory_history.goods_info_id
        order by ysh_enterprise_inventory_history.goods_info_id

        <if test="pageable != null">
            limit
            #{pageable.index,jdbcType=BIGINT}, #{pageable.length,jdbcType=BIGINT}
        </if>

    </select>

  <!-- 按照网点获取库存变动详情统计报表-->
    <select id="getHistoryByEnterprie" resultMap="FormResultMap">
        SELECT
        ysh_enterprise_inventory_history.id,
        ysh_enterprise_inventory_history.enterprise_id,
        yei.enterprise_name,
        ysh_enterprise_inventory_history.goods_info_id,
        ysh_enterprise_inventory_history.available_amount,
        ysh_enterprise_inventory_history.increase_amount,
        ysh_enterprise_inventory_history.instock_amount,
        ysh_enterprise_inventory_history.transfer_in,
        ysh_enterprise_inventory_history.order_back,
        ysh_enterprise_inventory_history.consume_amount,
        ysh_enterprise_inventory_history.transfer_out,
        ysh_enterprise_inventory_history.order_consume,
        ysh_enterprise_inventory_history.gains_amount,
        ysh_enterprise_inventory_history.less_report,
        ysh_enterprise_inventory_history.more_report,
        ysh_enterprise_inventory_history.record_time,
        goods_info_name,
        goods_info_item_no,
        lastMonth.last_month_inventory AS last_month_inventory,
        goods_spec_string,
        sum(ysh_enterprise_inventory_history.inventory_amount) AS inventory_amount
        FROM
        (
        SELECT DISTINCT(enterprise_id) from ysh_enterprise_inventory_history as yeih
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = yeih.enterprise_id
        <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            AND yeih.record_time =  #{end,jdbcType=TIMESTAMP}
        </where>
        order by enterprise_id
        <if test="pageable != null">
            limit
            #{pageable.index,jdbcType=BIGINT}, #{pageable.length,jdbcType=BIGINT}
        </if>

        ) as ids
        left join
        ysh_enterprise_inventory_history
        on ids.enterprise_id=ysh_enterprise_inventory_history.enterprise_id
        LEFT JOIN (
        SELECT
        goods_ids.goods_info_id,
        ngi.goods_info_name,
        ngi.goods_info_item_no,
        IFNULL(
        GROUP_CONCAT(
        concat(
        gs.spec_name,
        ":",
        IFNULL(gsd.spec_detail_name, "")
        )
        ),
        ""
        ) AS goods_spec_string
        FROM
        (
        SELECT DISTINCT
        (
        ysh_enterprise_inventory_history.goods_info_id
        )
        FROM
        ysh_enterprise_inventory_history

        ) AS goods_ids
        LEFT JOIN np_goods_info AS ngi ON ngi.goods_info_id = goods_ids.goods_info_id
        LEFT JOIN np_goods_info_rele_spec_detail AS girsd ON girsd.goods_info_id = ngi.goods_info_id
        LEFT JOIN np_goods_spec AS gs ON gs.spec_id = girsd.spec_id
        LEFT JOIN np_goods_spec_detail AS gsd ON gsd.spec_detail_id = girsd.spec_detail_id
        GROUP BY
        goods_ids.goods_info_id
        ) AS goods_info ON ysh_enterprise_inventory_history.goods_info_id = goods_info.goods_info_id
        left join ysh_enterprise_info as yei on yei.enterprise_id=ysh_enterprise_inventory_history.enterprise_id
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = ysh_enterprise_inventory_history.enterprise_id
        lEFT JOIN
        (
        SELECT
        enterprise_id,goods_info_id,
        sum(yeih2.inventory_amount) AS last_month_inventory
        FROM
        ysh_enterprise_inventory_history  as yeih2
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = yeih2.enterprise_id
        <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>

            AND yeih2.record_time = #{start,jdbcType=TIMESTAMP}
        </where>
        GROUP BY yeih2.enterprise_id,yeih2.goods_info_id
        ) as lastMonth on lastMonth.enterprise_id=ysh_enterprise_inventory_history.enterprise_id
        and  ysh_enterprise_inventory_history.goods_info_id=lastMonth.goods_info_id
        <where>
            ysh_enterprise_inventory_history.record_time=#{end,jdbcType=TIMESTAMP}
            <if test="goodsInfoName!=null">
                and
                goods_info_name like concat(concat('%', #{goodsInfoName,jdbcType=VARCHAR}),'%')
            </if>
            <if test="goodsInfoItemNo!=null">
                and
                goods_info_item_no=#{goodsInfoItemNo,jdbcType=VARCHAR}
            </if>
        </where>
        GROUP BY
        ysh_enterprise_inventory_history.enterprise_id,
        ysh_enterprise_inventory_history.goods_info_id
        order BY
        ysh_enterprise_inventory_history.enterprise_id,
        ysh_enterprise_inventory_history.goods_info_id

    </select>
    
    <select id="countHistoryByEnterprie" resultType="java.lang.Integer">
        SELECT count(DISTINCT(enterprise_id))
        FROM
        ysh_enterprise_inventory_history
        left join np_goods_info as ngi on ngi.goods_info_id=ysh_enterprise_inventory_history.goods_info_id
        LEFT JOIN ysh_enterprise_func AS yef ON yef.id = ysh_enterprise_inventory_history.enterprise_id
        <where>
            <if test="minCatalog != null">
                <![CDATA[
              yef.catalog >= #{minCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="maxCatalog != null">
                <![CDATA[
            and
            yef.catalog <= #{maxCatalog,jdbcType=BIGINT}
            ]]>
            </if>
            <if test="goodsInfoName!=null">
                and
                ngi.goods_info_name like concat(concat('%', #{goodsInfoName,jdbcType=VARCHAR}),'%')
            </if>
            <if test="goodsInfoItemNo!=null">
                and
                ngi.goods_info_item_no=#{goodsInfoItemNo,jdbcType=VARCHAR}
            </if>
            AND ysh_enterprise_inventory_history.record_time =  #{end,jdbcType=TIMESTAMP}
        </where>
    </select>








    <select id="statisticInventoryHistory" resultMap="BaseResultMap">
        SELECT
        enterprise_id,
        goods_info_id,
        IFNULL(transfer_in,0) +IFNULL(instock_amount,0) +IFNULL(order_back,0) AS increase_amount,
        transfer_in,
        instock_amount,
        order_back,
        IFNULL(transfer_out, 0) + IFNULL(order_consume, 0) AS consume_amount,
        transfer_out,
        order_consume,
        IFNULL(more_report, 0) - IFNULL(less_report, 0) AS gains_amount,
        less_report,
        more_report
        FROM
        (
        SELECT
        yeich.enterprise_id,
        yeich.goods_info_id,
        IFNULL(
        sum(
        CASE
        WHEN yeich.inventory_change_type = "GOODSINFO_TRANSFER_IN" THEN
        yeich.inventory_change_amount
        END
        ),
        0
        ) AS transfer_in,
        IFNULL(sum(
        CASE
        WHEN yeich.inventory_change_type = "GOODSINFO_TRANSFER_OUT" THEN
        yeich.inventory_change_amount
        END
        ),0) AS transfer_out,
        IFNULL(sum(
        CASE
        WHEN yeich.inventory_change_type = "GOODSINFO_INSTOCK" THEN
        yeich.inventory_change_amount
        END
        ) ,0)AS instock_amount,
        IFNULL(sum(
        CASE
        WHEN yeich.inventory_change_type = "ORDER_RETURNED" THEN
        yeich.inventory_change_amount
        END
        ),0) AS order_back,
        IFNULL(sum(
        CASE
        WHEN yeich.inventory_change_type = "ORDER_CONSUME" THEN
        yeich.inventory_change_amount
        END
        ),0) AS order_consume,
        IFNULL(sum(
        CASE
        WHEN yeich.inventory_change_type = "GOODSINFO_LESS_REPORT" THEN
        yeich.inventory_change_amount
        END
        ),0) AS less_report,
        IFNULL(sum(
        CASE
        WHEN yeich.inventory_change_type = "GOODSINFO_MORE_REPORT" THEN
        yeich.inventory_change_amount
        END
        ),0) AS more_report
        FROM
        ysh_enterprise_inventory_change_history AS yeich
        <where>
        <if test="start != null">
        <![CDATA[
             yeich.change_time >= #{start,jdbcType=TIMESTAMP}
            ]]>
        </if>
         <if test="end != null">
        <![CDATA[
            and
             yeich.change_time <= #{end,jdbcType=TIMESTAMP}
            ]]>
        </if>
        </where>
        GROUP BY
        yeich.enterprise_id,
        yeich.goods_info_id
        ) AS middle
        for UPDATE
    </select>




  <sql id="Base_Column_List" >
     ysh_enterprise_inventory_history.id,
     ysh_enterprise_inventory_history.enterprise_id,
     ysh_enterprise_inventory_history.goods_info_id,
     ysh_enterprise_inventory_history.inventory_amount,
     ysh_enterprise_inventory_history.available_amount,
     ysh_enterprise_inventory_history.increase_amount,
     ysh_enterprise_inventory_history.instock_amount,
     ysh_enterprise_inventory_history.transfer_in,
     ysh_enterprise_inventory_history.order_back,
     ysh_enterprise_inventory_history.consume_amount,
     ysh_enterprise_inventory_history.transfer_out,
     ysh_enterprise_inventory_history.order_consume,
     ysh_enterprise_inventory_history.gains_amount,
     ysh_enterprise_inventory_history.less_report,
     ysh_enterprise_inventory_history.more_report,
     ysh_enterprise_inventory_history.record_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ysh_enterprise_inventory_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ysh_enterprise_inventory_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ylife.inventory.model.InventoryHistory" >
    insert into ysh_enterprise_inventory_history (id, enterprise_id, goods_info_id, 
      inventory_amount, available_amount, increase_amount, 
      instock_amount, transfer_in, order_back, 
      consume_amount, transfer_out, order_consume, 
      gains_amount, less_report, more_report, 
      record_time)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=INTEGER}, #{goodsInfoId,jdbcType=BIGINT}, 
      #{inventoryAmount,jdbcType=INTEGER}, #{availableAmount,jdbcType=INTEGER}, #{increaseAmount,jdbcType=INTEGER}, 
      #{instockAmount,jdbcType=INTEGER}, #{transferIn,jdbcType=INTEGER}, #{orderBack,jdbcType=INTEGER}, 
      #{consumeAmount,jdbcType=INTEGER}, #{transferOut,jdbcType=INTEGER}, #{orderConsume,jdbcType=INTEGER}, 
      #{gainsAmount,jdbcType=INTEGER}, #{lessReport,jdbcType=INTEGER}, #{moreReport,jdbcType=INTEGER}, 
      #{recordTime,jdbcType=TIMESTAMP})
  </insert>
    
    <insert id="insertByBatch">
        <foreach collection="list" item="item" separator=";">
        insert into ysh_enterprise_inventory_history
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="item.id != null" >
                id,
            </if>
            <if test="item.enterpriseId != null" >
                enterprise_id,
            </if>
            <if test="item.goodsInfoId != null" >
                goods_info_id,
            </if>
            <if test="item.inventoryAmount != null" >
                inventory_amount,
            </if>
            <if test="item.availableAmount != null" >
                available_amount,
            </if>
            <if test="item.increaseAmount != null" >
                increase_amount,
            </if>
            <if test="item.instockAmount != null" >
                instock_amount,
            </if>
            <if test="item.transferIn != null" >
                transfer_in,
            </if>
            <if test="item.orderBack != null" >
                order_back,
            </if>
            <if test="item.consumeAmount != null" >
                consume_amount,
            </if>
            <if test="item.transferOut != null" >
                transfer_out,
            </if>
            <if test="item.orderConsume != null" >
                order_consume,
            </if>
            <if test="item.gainsAmount != null" >
                gains_amount,
            </if>
            <if test="item.lessReport != null" >
                less_report,
            </if>
            <if test="item.moreReport != null" >
                more_report,
            </if>
            <if test="recordTime != null" >
                record_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="item.id != null" >
                #{item.id,jdbcType=BIGINT},
            </if>
            <if test="item.enterpriseId != null" >
                #{item.enterpriseId,jdbcType=INTEGER},
            </if>
            <if test="item.goodsInfoId != null" >
                #{item.goodsInfoId,jdbcType=BIGINT},
            </if>
            <if test="item.inventoryAmount != null" >
                #{item.inventoryAmount,jdbcType=INTEGER},
            </if>
            <if test="item.availableAmount != null" >
                #{item.availableAmount,jdbcType=INTEGER},
            </if>
            <if test="item.increaseAmount != null" >
                #{item.increaseAmount,jdbcType=INTEGER},
            </if>
            <if test="item.instockAmount != null" >
                #{item.instockAmount,jdbcType=INTEGER},
            </if>
            <if test="item.transferIn != null" >
                #{item.transferIn,jdbcType=INTEGER},
            </if>
            <if test="item.orderBack != null" >
                #{item.orderBack,jdbcType=INTEGER},
            </if>
            <if test="item.consumeAmount != null" >
                #{item.consumeAmount,jdbcType=INTEGER},
            </if>
            <if test="item.transferOut != null" >
                #{item.transferOut,jdbcType=INTEGER},
            </if>
            <if test="item.orderConsume != null" >
                #{item.orderConsume,jdbcType=INTEGER},
            </if>
            <if test="item.gainsAmount != null" >
                #{item.gainsAmount,jdbcType=INTEGER},
            </if>
            <if test="item.lessReport != null" >
                #{item.lessReport,jdbcType=INTEGER},
            </if>
            <if test="item.moreReport != null" >
                #{item.moreReport,jdbcType=INTEGER},
            </if>
            <if test="recordTime != null" >
                #{recordTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        </foreach>
    </insert>


  <insert id="insertSelective" parameterType="com.ylife.inventory.model.InventoryHistory" >
    insert into ysh_enterprise_inventory_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="goodsInfoId != null" >
        goods_info_id,
      </if>
      <if test="inventoryAmount != null" >
        inventory_amount,
      </if>
      <if test="availableAmount != null" >
        available_amount,
      </if>
      <if test="increaseAmount != null" >
        increase_amount,
      </if>
      <if test="instockAmount != null" >
        instock_amount,
      </if>
      <if test="transferIn != null" >
        transfer_in,
      </if>
      <if test="orderBack != null" >
        order_back,
      </if>
      <if test="consumeAmount != null" >
        consume_amount,
      </if>
      <if test="transferOut != null" >
        transfer_out,
      </if>
      <if test="orderConsume != null" >
        order_consume,
      </if>
      <if test="gainsAmount != null" >
        gains_amount,
      </if>
      <if test="lessReport != null" >
        less_report,
      </if>
      <if test="moreReport != null" >
        more_report,
      </if>
      <if test="recordTime != null" >
        record_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="goodsInfoId != null" >
        #{goodsInfoId,jdbcType=BIGINT},
      </if>
      <if test="inventoryAmount != null" >
        #{inventoryAmount,jdbcType=INTEGER},
      </if>
      <if test="availableAmount != null" >
        #{availableAmount,jdbcType=INTEGER},
      </if>
      <if test="increaseAmount != null" >
        #{increaseAmount,jdbcType=INTEGER},
      </if>
      <if test="instockAmount != null" >
        #{instockAmount,jdbcType=INTEGER},
      </if>
      <if test="transferIn != null" >
        #{transferIn,jdbcType=INTEGER},
      </if>
      <if test="orderBack != null" >
        #{orderBack,jdbcType=INTEGER},
      </if>
      <if test="consumeAmount != null" >
        #{consumeAmount,jdbcType=INTEGER},
      </if>
      <if test="transferOut != null" >
        #{transferOut,jdbcType=INTEGER},
      </if>
      <if test="orderConsume != null" >
        #{orderConsume,jdbcType=INTEGER},
      </if>
      <if test="gainsAmount != null" >
        #{gainsAmount,jdbcType=INTEGER},
      </if>
      <if test="lessReport != null" >
        #{lessReport,jdbcType=INTEGER},
      </if>
      <if test="moreReport != null" >
        #{moreReport,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylife.inventory.model.InventoryHistory" >
    update ysh_enterprise_inventory_history
    <set >
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="goodsInfoId != null" >
        goods_info_id = #{goodsInfoId,jdbcType=BIGINT},
      </if>
      <if test="inventoryAmount != null" >
        inventory_amount = #{inventoryAmount,jdbcType=INTEGER},
      </if>
      <if test="availableAmount != null" >
        available_amount = #{availableAmount,jdbcType=INTEGER},
      </if>
      <if test="increaseAmount != null" >
        increase_amount = #{increaseAmount,jdbcType=INTEGER},
      </if>
      <if test="instockAmount != null" >
        instock_amount = #{instockAmount,jdbcType=INTEGER},
      </if>
      <if test="transferIn != null" >
        transfer_in = #{transferIn,jdbcType=INTEGER},
      </if>
      <if test="orderBack != null" >
        order_back = #{orderBack,jdbcType=INTEGER},
      </if>
      <if test="consumeAmount != null" >
        consume_amount = #{consumeAmount,jdbcType=INTEGER},
      </if>
      <if test="transferOut != null" >
        transfer_out = #{transferOut,jdbcType=INTEGER},
      </if>
      <if test="orderConsume != null" >
        order_consume = #{orderConsume,jdbcType=INTEGER},
      </if>
      <if test="gainsAmount != null" >
        gains_amount = #{gainsAmount,jdbcType=INTEGER},
      </if>
      <if test="lessReport != null" >
        less_report = #{lessReport,jdbcType=INTEGER},
      </if>
      <if test="moreReport != null" >
        more_report = #{moreReport,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylife.inventory.model.InventoryHistory" >
    update ysh_enterprise_inventory_history
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      goods_info_id = #{goodsInfoId,jdbcType=BIGINT},
      inventory_amount = #{inventoryAmount,jdbcType=INTEGER},
      available_amount = #{availableAmount,jdbcType=INTEGER},
      increase_amount = #{increaseAmount,jdbcType=INTEGER},
      instock_amount = #{instockAmount,jdbcType=INTEGER},
      transfer_in = #{transferIn,jdbcType=INTEGER},
      order_back = #{orderBack,jdbcType=INTEGER},
      consume_amount = #{consumeAmount,jdbcType=INTEGER},
      transfer_out = #{transferOut,jdbcType=INTEGER},
      order_consume = #{orderConsume,jdbcType=INTEGER},
      gains_amount = #{gainsAmount,jdbcType=INTEGER},
      less_report = #{lessReport,jdbcType=INTEGER},
      more_report = #{moreReport,jdbcType=INTEGER},
      record_time = #{recordTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>