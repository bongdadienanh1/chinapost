<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylife.inventory.mapper.InventoryPurchaseBillMapper" >
  <resultMap id="BaseResultMap" type="com.ylife.inventory.model.InventoryPurchaseBill" >
    <id column="purchase_id" property="purchaseId" jdbcType="BIGINT" />
    <result column="third_id" property="thirdId" jdbcType="BIGINT" />
    <result column="bill_id" property="billId" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="marks" property="marks" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="third_name" property="thirdName" jdbcType="VARCHAR"/>
    <result column="purchase_amount" jdbcType="BIGINT" property="purchaseAmount"/>
    <result column="receipt_sum_amount" jdbcType="BIGINT" property="receiptSumAmount"/>
    <collection property="items" resultMap="ItemBaseResultMap"/>
  </resultMap>

  <resultMap id="ItemBaseResultMap" type="com.ylife.inventory.model.InventoryPurchaseBillItem">
    <id column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName"/>
    <result column="goodsInfo_id" jdbcType="BIGINT" property="goodsinfoId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="sumAmount" jdbcType="INTEGER" property="sumAmount" />
    <result column="settle_price" jdbcType="DECIMAL" property="settlePrice" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="receipt_amount" jdbcType="BIGINT" property="receiptAmount"/>
    <collection property="info" ofType="com.ylife.inventory.model.InventoryPurchaseBillItem$ItemGoodsInfo"
                resultMap="GoodsInfoResultMap"/>
  </resultMap>


  <resultMap id="GoodsInfoResultMap" type="com.ylife.inventory.model.InventoryPurchaseBillItem$ItemGoodsInfo">
    <id column="goods_info_id" property="goodsInfoId" jdbcType="BIGINT"/>
    <result column="goods_info_name" property="goodsInfoName" jdbcType="VARCHAR"/>
    <result column="spec_string" property="specString" jdbcType="VARCHAR"/>
    <result column="goods_info_item_no" property="goodsInfoItemNo" jdbcType="VARCHAR"/>
    <result column="goods_info_type" property="goodsInfoType" jdbcType="INTEGER"/>
    <result column="inventory" property="inventory" jdbcType="INTEGER"/>
    <result column="available" property="available" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List" >
    cp_inventory_purchase_bill.purchase_id,
    cp_inventory_purchase_bill.third_id,
    cp_inventory_purchase_bill.code,
    cp_inventory_purchase_bill.status,
    cp_inventory_purchase_bill.marks,
    cp_inventory_purchase_bill.create_time,
    cp_inventory_purchase_bill.bill_id,
    cp_inventory_purchase_bill.purchase_amount,
    cp_inventory_purchase_bill.receipt_sum_amount
  </sql>

  <sql id="Base_item_Column_List">
    cp_inventory_purchase_bill_item.item_id,
    cp_inventory_purchase_bill_item.purchase_id,
    cp_inventory_purchase_bill_item.enterprise_id,
    cp_inventory_purchase_bill_item.goodsInfo_id,
    cp_inventory_purchase_bill_item.amount,
    cp_inventory_purchase_bill_item.settle_price,
    cp_inventory_purchase_bill_item.total_price,
    cp_inventory_purchase_bill_item.receipt_amount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cp_inventory_purchase_bill
    where purchase_id = #{purchaseId,jdbcType=BIGINT}
  </select>
  <select id="selectSumDetailByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    SELECT
    <include refid="Base_Column_List" />,
    cp_inventory_purchase_bill_item.item_id,
    cp_inventory_purchase_bill_item.enterprise_id,
    cp_inventory_purchase_bill_item.goodsInfo_id,
    cp_inventory_purchase_bill_item.settle_price,
    cp_inventory_purchase_bill_item.total_price,
    sum(
    cp_inventory_purchase_bill_item.receipt_amount
    ) AS receipt_amount,
    yshinfo.enterprise_name,
    yshinfo.addr_detail,
    inner_goods.goods_info_id,
    inner_goods.goods_info_name,
    inner_goods.goods_info_item_no,
    inner_goods.goods_info_type,
    inner_goods.third_name AS third_name,
    inner_goods.spec_string,
    sum(
    cp_inventory_purchase_bill_item.amount
    ) AS sumAmount
    FROM
    cp_inventory_purchase_bill
    LEFT JOIN cp_inventory_purchase_bill_item ON cp_inventory_purchase_bill_item.purchase_id = cp_inventory_purchase_bill.purchase_id
    LEFT JOIN ysh_enterprise_info yshinfo ON yshinfo.enterprise_id = cp_inventory_purchase_bill_item.enterprise_id
    LEFT JOIN (
    SELECT
    np_goods_info.goods_info_id,
    np_goods_info.goods_info_name,
    np_goods_info.goods_info_item_no,
    np_goods_info.goods_info_type,
    np_goods_info.third_name,
    np_goods_info.third_id,
    IFNULL(
    np_goods_info.goods_info_settle_price,
    0
    ) AS goods_info_settle_price,
      ifnull(
      concat(
      ifnull(
      group_concat(np_goods_spec.spec_name,":",np_goods_spec_detail.spec_detail_name),
      ""
      )
      ),
      ""
      )AS spec_string
    FROM
    np_goods_info
    LEFT JOIN np_goods_info_rele_spec_detail ON np_goods_info_rele_spec_detail.goods_info_id = np_goods_info.goods_info_id
    LEFT JOIN np_goods_spec ON np_goods_spec.spec_id = np_goods_info_rele_spec_detail.spec_id
    LEFT JOIN np_goods_spec_detail ON np_goods_spec_detail.spec_detail_id = np_goods_info_rele_spec_detail.spec_detail_id
    WHERE
    np_goods_info.goods_info_id IN (
    SELECT DISTINCT
    (goodsInfo_id)
    FROM
    cp_inventory_purchase_bill_item
    WHERE
    purchase_id = #{purchaseId,jdbcType=BIGINT}
    )group by np_goods_info.goods_info_id
    ) AS inner_goods ON inner_goods.goods_info_id = cp_inventory_purchase_bill_item.goodsInfo_id
    WHERE
    cp_inventory_purchase_bill.purchase_id = #{purchaseId,jdbcType=BIGINT}
    GROUP BY
    goodsInfo_id
  </select>

  <select id="selectPurchaseDetailByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    SELECT
    <include refid="Base_Column_List" />,
    cp_inventory_purchase_bill_item.item_id,
    cp_inventory_purchase_bill_item.enterprise_id,
    cp_inventory_purchase_bill_item.goodsInfo_id,
    cp_inventory_purchase_bill_item.settle_price,
    cp_inventory_purchase_bill_item.total_price,
    cp_inventory_purchase_bill_item.receipt_amount,
    yshinfo.enterprise_name,
    yshinfo.addr_detail,
    inner_goods.goods_info_id,
    inner_goods.goods_info_name,
    inner_goods.goods_info_item_no,
    inner_goods.goods_info_type,
    inner_goods.third_name AS third_name,
    inner_goods.spec_string,
    sum(
    cp_inventory_purchase_bill_item.amount
    ) AS sumAmount
    FROM
    cp_inventory_purchase_bill
    LEFT JOIN cp_inventory_purchase_bill_item ON cp_inventory_purchase_bill_item.purchase_id = cp_inventory_purchase_bill.purchase_id
    LEFT JOIN ysh_enterprise_info yshinfo ON yshinfo.enterprise_id = cp_inventory_purchase_bill_item.enterprise_id
    LEFT JOIN (
    SELECT
    np_goods_info.goods_info_id,
    np_goods_info.goods_info_name,
    np_goods_info.goods_info_item_no,
    np_goods_info.goods_info_type,
    np_goods_info.third_name,
    np_goods_info.third_id,
    IFNULL(
    np_goods_info.goods_info_settle_price,
    0
    ) AS goods_info_settle_price,
      ifnull(
      concat(
      ifnull(
      group_concat(np_goods_spec.spec_name,":",np_goods_spec_detail.spec_detail_name),
      ""
      )
      ),
      ""
      ) AS spec_string
    FROM
    np_goods_info
    LEFT JOIN np_goods_info_rele_spec_detail ON np_goods_info_rele_spec_detail.goods_info_id = np_goods_info.goods_info_id
    LEFT JOIN np_goods_spec ON np_goods_spec.spec_id = np_goods_info_rele_spec_detail.spec_id
    LEFT JOIN np_goods_spec_detail ON np_goods_spec_detail.spec_detail_id = np_goods_info_rele_spec_detail.spec_detail_id
    WHERE
    np_goods_info.goods_info_id IN (
    SELECT DISTINCT
    (goodsInfo_id)
    FROM
    cp_inventory_purchase_bill_item
    WHERE
    purchase_id = #{purchaseId,jdbcType=BIGINT}
    )group by np_goods_info.goods_info_id
    ) AS inner_goods ON inner_goods.goods_info_id = cp_inventory_purchase_bill_item.goodsInfo_id
    WHERE
    cp_inventory_purchase_bill.purchase_id = #{purchaseId,jdbcType=BIGINT}
    GROUP BY
    enterprise_id,goodsInfo_id
  </select>

  <select id="selectPurchaseBillList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>,
    np_third_store_info.store_name as third_name
    from cp_inventory_purchase_bill
LEFT JOIN np_third_store_info on np_third_store_info.store_id = cp_inventory_purchase_bill.third_id
    <where>
      <if test="status != null">
        and cp_inventory_purchase_bill.status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="code != null">
        and cp_inventory_purchase_bill.code = #{code,jdbcType=BIGINT}
      </if>
      <if test="end!=null">
        <![CDATA[
                and
                  cp_inventory_purchase_bill.create_time<= #{end,jdbcType=TIMESTAMP}
                  ]]>
      </if>
      <if test="start!=null">
        <![CDATA[
                  and
                  cp_inventory_purchase_bill.create_time>=#{start,jdbcType=TIMESTAMP}
            ]]>
      </if>
    </where>
    order by cp_inventory_purchase_bill.create_time desc
    <if test="pageable != null">
      limit
      #{pageable.index,jdbcType=BIGINT}, #{pageable.length,jdbcType=BIGINT}
    </if>
  </select>

  <select id="selectPurchaseCountByBillId" resultType="java.lang.Integer" parameterType="java.lang.Long">
    select count(*) from cp_inventory_purchase_bill where bill_id = #{billId,jdbcType=BIGINT}
  </select>

  <select id="countPurchaseBillList" resultType="java.lang.Integer">
    select
        count(*)
        from cp_inventory_purchase_bill
    LEFT JOIN np_third_store_info on np_third_store_info.store_id = cp_inventory_purchase_bill.third_id
    <where>

      <if test="status != null">
        and cp_inventory_purchase_bill.status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="code != null">
        and cp_inventory_purchase_bill.code = #{code,jdbcType=BIGINT}
      </if>
      <if test="end!=null">
        <![CDATA[
                and
                  cp_inventory_purchase_bill.create_time<= #{end,jdbcType=TIMESTAMP}
                  ]]>
      </if>
      <if test="start!=null">
        <![CDATA[
                  and
                  cp_inventory_purchase_bill.create_time>=#{start,jdbcType=TIMESTAMP}
            ]]>
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cp_inventory_purchase_bill
    where purchase_id = #{purchaseId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ylife.inventory.model.InventoryPurchaseBill" >
    insert into cp_inventory_purchase_bill (purchase_id, third_id, code, 
      status, marks, create_time
      )
    values (#{purchaseId,jdbcType=BIGINT}, #{thirdId,jdbcType=BIGINT}, #{code,jdbcType=BIGINT}, 
      #{status,jdbcType=VARCHAR}, #{marks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ylife.inventory.model.InventoryPurchaseBill" keyProperty="purchaseId" useGeneratedKeys="true">
    insert into cp_inventory_purchase_bill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="purchaseId != null" >
        purchase_id,
      </if>
      <if test="thirdId != null" >
        third_id,
      </if>
      <if test="billId != null" >
        bill_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="marks != null" >
        marks,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="purchaseAmount != null" >
        purchase_amount,
      </if>
      <if test="receiptSumAmount != null" >
        receipt_sum_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="purchaseId != null" >
        #{purchaseId,jdbcType=BIGINT},
      </if>
      <if test="thirdId != null" >
        #{thirdId,jdbcType=BIGINT},
      </if>
      <if test="billId != null" >
        #{billId,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="marks != null" >
        #{marks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchaseAmount != null" >
        #{purchaseAmount,jdbcType=BIGINT},
      </if>
      <if test="receiptSumAmount != null" >
        #{receiptSumAmount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylife.inventory.model.InventoryPurchaseBill" >
    update cp_inventory_purchase_bill
    <set >
      <if test="thirdId != null" >
        third_id = #{thirdId,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="marks != null" >
        marks = #{marks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiptSumAmount != null" >
        receipt_sum_amount = #{receiptSumAmount,jdbcType=BIGINT},
      </if>
      <if test="purchaseAmount != null" >
        purchase_amount = #{purchaseAmount,jdbcType=BIGINT},
      </if>
    </set>
    where purchase_id = #{purchaseId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylife.inventory.model.InventoryPurchaseBill" >
    update cp_inventory_purchase_bill
    set third_id = #{thirdId,jdbcType=BIGINT},
      code = #{code,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      marks = #{marks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where purchase_id = #{purchaseId,jdbcType=BIGINT}
  </update>
</mapper>