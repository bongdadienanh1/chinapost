<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylife.order.mapper.OrderGoodsMapper">

    <resultMap id="BaseResultMap" type="com.ylife.order.model.OrderGoods">
        <id column="order_goods_id" property="orderGoodsId" jdbcType="BIGINT"/>
        <result column="order_id" property="orderId" jdbcType="BIGINT"/>
        <result column="goods_id" property="goodsId" jdbcType="BIGINT"/>
        <result column="goods_info_id" property="goodsInfoId" jdbcType="BIGINT"/>
        <result column="goods_info_num" property="goodsInfoNum" jdbcType="BIGINT"/>
        <result column="distinct_id" property="distinctId" jdbcType="BIGINT"/>
        <result column="goods_info_old_price" property="goodsInfoOldPrice" jdbcType="DECIMAL"/>
        <result column="goods_info_price" property="goodsInfoPrice" jdbcType="DECIMAL"/>
        <result column="goods_coupon_price" property="goodsCouponPrice" jdbcType="DECIMAL"/>
        <result column="goods_info_sum_price" property="goodsInfoSumPrice" jdbcType="DECIMAL"/>
        <result column="goods_info_settle_price" property="goodsInfoSettlePrice" jdbcType="DECIMAL"/>
        <result column="have_gift_status" property="haveGiftStatus" jdbcType="CHAR"/>
        <result column="have_coupon_status" property="haveCouponStatus" jdbcType="CHAR"/>
        <result column="goods_marketing_id" property="goodsMarketingId" jdbcType="BIGINT"/>
        <result column="goods_active_marketingId" property="goodsActiveMarketingId" jdbcType="BIGINT"/>
        <result column="buy_time" property="buyTime" jdbcType="TIMESTAMP"/>
        <result column="del_flag" property="delFlag" jdbcType="CHAR"/>
        <result column="evaluate_flag" property="evaluateFlag" jdbcType="CHAR"/>
        <result column="share_flag" property="shareFlag" jdbcType="CHAR"/>
        <result column="goods_info_name" property="goodsInfoName" jdbcType="VARCHAR"/>
        <result column="goods_info_image" property="goodsImg" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
        <result column="goods_info_item_no" property="goodsInfoItemNo" jdbcType="VARCHAR"/>
        <collection property="goodsProductReleSpecVoList" column="goods_info_id" javaType="ArrayList"
                    ofType="com.ylife.goods.model.GoodsProductReleSpecVo"
                    select="com.ylife.goods.mapper.GoodsProductReleSpecMapper.queryAllByProductId"></collection>
        <!--<collection property="goodsProductVo" column="goods_info_id" ofType="com.ylife.goods.model.GoodsProductDetailViewVo"-->
        <!--select="com.ylife.goods.mapper.GoodsProductMapper.queryViewVoByProductId" ></collection>-->
    </resultMap>

    <sql id="Base_Column_List">
        order_goods_id, order_id, goods_id, goods_info_id, goods_info_num, goods_info_old_price,
        goods_info_price, goods_coupon_price, goods_info_sum_price, have_gift_status, have_coupon_status,
        goods_marketing_id, buy_time, del_flag, evaluate_flag,goods_active_marketingId,distinct_id
    </sql>
    <!-- 会员评论的数量 前端会员中心我的评论-->
    <select id="queryCommentCountByCust" resultType="java.lang.Long" parameterType="java.lang.Object">
        select count(1) from np_order_goods goods
        inner join np_order orders on goods.order_id=orders.order_id
        inner join np_goods_info info on info.goods_info_id=goods.goods_info_id
        where goods.del_flag='0' and info.goods_info_delflag='0' and orders.customer_id=#{customerId}
        <![CDATA[
		    	and orders.order_status !='4'and orders.order_status !='0'and orders.order_status !='1' and orders.order_status !='2'
		    	]]>
        <if test="orderId != null">
            and orders.order_id = #{orderId}
        </if>
    </select>
    <!-- 会员评论   前端会员中心我的评论-->
    <select id="queryCommentByCust" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        info.goods_info_id,info.goods_info_name,info.goods_info_img_id,goods.buy_time,goods.evaluate_flag,goods.share_flag,orders.order_id,goods.order_goods_id
        from np_order_goods goods
        inner join np_order orders on goods.order_id=orders.order_id
        inner join np_goods_info info on info.goods_info_id=goods.goods_info_id
        where goods.del_flag='0'and info.goods_info_delflag='0' and orders.customer_id=#{customerId}

        <![CDATA[
		    		and orders.order_status !='4'and orders.order_status !='0'and orders.order_status !='1' and orders.order_status !='2'
		    	]]>
        <if test="orderId != null">
            and orders.order_id = #{orderId}
        </if>
        order by goods.buy_time DESC
        limit #{startRowNum,jdbcType=BIGINT},#{endRowNum,jdbcType=BIGINT}
    </select>
    <!--查询每天销售前十的商品  -->
    <select id="selectTopOrderGoods" resultMap="BaseResultMap">
        select og.goods_info_id,gi.goods_info_name, sum(og.goods_info_num) as goods_info_num
        from np_order_goods og, np_goods_info gi
        where DATE_FORMAT(buy_time, '%Y-%m-%d') = curdate()
        and og.goods_info_id=gi.goods_info_id
        GROUP BY og.goods_info_id
        order by sum(og.goods_info_num) desc
        limit 0,10
    </select>
    <!-- 根据用户id查询购买记录 -->
    <select id="queryProGoodsInfoByCustomerId" useCache="false" parameterType="java.util.List"
            resultMap="BaseResultMap">
        SELECT goods.goods_info_id, gi.goods_info_name from np_order ord,np_order_goods goods,np_goods_info gi where
        ord.order_id = goods.order_id
        <if test="list !=null">
            and ord.customer_id in

            <foreach collection="list" item="customer_id" open="(" separator="," close=")">
                #{customer_id}
            </foreach>


        </if>
        and gi.goods_info_id=goods.goods_info_id and show_mobile='1' and goods_info_delflag='0'
        group by gi.goods_info_id
        ORDER BY ord.create_time
        LIMIT 0,8
    </select>

    <!-- 根据商品id查询购买的用户记录 -->
    <select id="queryProGoodsInfoCustomer" parameterType="java.lang.Object" resultMap="BaseResultMap">
        select ord.customer_id from np_order ord,np_order_goods goods where
        ord.order_id = goods.order_id and goods_info_id=#{goodsInfoId}
        GROUP BY ord.customer_id ORDER BY ord.create_time LIMIT 0,50
    </select>

    <!--已经退单成功商品 就不显示在订单列表里面-->
    <select id="selectOrderGoodsListBack" resultMap="BaseResultMap" parameterType="java.lang.Object">
        SELECT
        g.order_goods_id,g.order_id,g.goods_id,g.goods_info_id,g.goods_info_num,g.goods_info_old_price,g.goods_info_price,
        g.goods_coupon_price,g.goods_info_sum_price,g.have_gift_status,g.have_coupon_status,g.goods_marketing_id,g.buy_time,
        g.del_flag,g.evaluate_flag,g.goods_active_marketingId,g.distinct_id,goods_info_item_no,goods_info_name

        FROM np_order_goods g
        LEFT JOIN np_goods_info info ON g.goods_info_id = info.goods_info_id
        where order_id = #{order_Id,jdbcType=BIGINT} and g.back_flag = '1'

    </select>


    <!-- 查询订单商品列表 -->
    <select id="selectOrderGoodsList" resultMap="BaseResultMap" parameterType="java.lang.Object">
        SELECT
        g.order_goods_id,
        g.order_id,
        g.goods_id,
        g.goods_info_id,
        g.goods_info_num,
        g.goods_info_old_price,
        g.goods_info_price,
        g.goods_coupon_price,
        g.goods_info_sum_price,
        g.have_gift_status,
        g.have_coupon_status,
        g.goods_marketing_id,
        g.buy_time,
        g.del_flag,
        g.evaluate_flag,
        g.goods_active_marketingId,
        g.distinct_id,
        goods_info_item_no,
        g.goods_info_name,
        g.goods_info_image,
        goods_info_settle_price
        FROM np_order_goods g
        LEFT JOIN np_goods_info info ON g.goods_info_id = info.goods_info_id
        where order_id = #{order_Id,jdbcType=BIGINT}
    </select>

    <!-- 批量查询订单商品列表 -->
    <select id="selectOrderGoodsLists" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT
        g.order_goods_id,g.order_id,g.goods_id,g.goods_info_id,g.goods_info_num,g.goods_info_old_price,g.goods_info_price,
        g.goods_coupon_price,g.goods_info_sum_price,g.have_gift_status,g.have_coupon_status,g.goods_marketing_id,g.buy_time,
        g.del_flag,g.evaluate_flag,g.goods_active_marketingId,g.distinct_id,goods_info_item_no,goods_info_name

        FROM np_order_goods g
        LEFT JOIN np_goods_info info ON g.goods_info_id = info.goods_info_id
        where order_id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <!-- 查询订单商品列表 -->
    <select id="selectOrderGoodsListbacks" resultMap="BaseResultMap" parameterType="java.lang.Object">
        SELECT
        g.order_goods_id,g.order_id,g.goods_id,g.goods_info_id,g.goods_info_num,g.goods_info_old_price,g.goods_info_price,
        g.goods_coupon_price,g.goods_info_sum_price,g.have_gift_status,g.have_coupon_status,g.goods_marketing_id,g.buy_time,
        g.del_flag,g.evaluate_flag,g.goods_active_marketingId,g.distinct_id,goods_info_item_no,goods_info_name

        FROM np_order_goods g
        LEFT JOIN np_goods_info info ON g.goods_info_id = info.goods_info_id
        where order_id = #{order_Id,jdbcType=BIGINT} and g.back_flag = '1'
    </select>

    <!--根据订单集合查询所有货品id集合-->
    <select id="selectOrderGoodsListByOrders" resultMap="BaseResultMap" parameterType="java.util.List">
        SELECT
        g.order_goods_id,g.order_id,g.goods_id,g.goods_info_id,g.goods_info_num,g.goods_info_old_price,g.goods_info_price,
        g.goods_coupon_price,g.goods_info_sum_price,g.have_gift_status,g.have_coupon_status,g.goods_marketing_id,g.buy_time,
        g.del_flag,g.evaluate_flag,g.goods_active_marketingId,g.distinct_id,goods_info_item_no,goods_info_name
        FROM np_order_goods g
        LEFT JOIN np_goods_info info ON g.goods_info_id = info.goods_info_id
        where order_id in(
        <foreach collection="list" separator="," item="backorder" index="index">
            #{backorder.orderId}
        </foreach>
        )
    </select>


    <!-- 查询退单商品列表 -->
    <select id="selectBackGoodsList" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from np_order_goods
        where order_id = #{orderId,jdbcType=BIGINT}
    </select>

    <!-- 查询换单商品列表 -->
    <select id="selectBarterGoodList" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from np_order_goods
        where barter_order_code = #{barterOrderCode,jdbcType=VARCHAR}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Object">
        select
        <include refid="Base_Column_List"/>
        from np_order_goods
        where order_goods_id = #{orderGoodsId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
        delete from np_order_goods
        where order_goods_id = #{orderGoodsId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ylife.order.model.OrderGoods">
        insert into np_order_goods (order_goods_id, order_id, goods_id,
        goods_info_id, goods_info_num, goods_info_old_price,
        goods_info_price, goods_coupon_price, goods_info_sum_price,
        have_gift_status, have_coupon_status, goods_marketing_id,
        buy_time, del_flag, evaluate_flag
        )
        values (#{orderGoodsId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT},
        #{goodsInfoId,jdbcType=BIGINT}, #{goodsInfoNum,jdbcType=BIGINT}, #{goodsInfoOldPrice,jdbcType=DECIMAL},
        #{goodsInfoPrice,jdbcType=DECIMAL}, #{goodsCouponPrice,jdbcType=DECIMAL}, #{goodsInfoSumPrice,jdbcType=DECIMAL},
        #{haveGiftStatus,jdbcType=CHAR}, #{haveCouponStatus,jdbcType=CHAR}, #{goodsMarketingId,jdbcType=BIGINT},
        #{buyTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=CHAR}, #{evaluateFlag,jdbcType=CHAR}
        )
    </insert>


    <!-- 插入订单商品 -->
    <insert id="insertOrderGoodsInfo" parameterType="com.ylife.order.model.OrderGoods">
        insert into np_order_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderGoodsId != null">
                order_goods_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="goodsInfoId != null">
                goods_info_id,
            </if>
            <if test="goodsInfoNum != null">
                goods_info_num,
            </if>
            <if test="goodsInfoOldPrice != null">
                goods_info_old_price,
            </if>
            <if test="goodsInfoPrice != null">
                goods_info_price,
            </if>
            <if test="goodsCouponPrice != null">
                goods_coupon_price,
            </if>
            <if test="goodsInfoSumPrice != null">
                goods_info_sum_price,
            </if>
            <if test="haveGiftStatus != null">
                have_gift_status,
            </if>
            <if test="haveCouponStatus != null">
                have_coupon_status,
            </if>
            <if test="goodsMarketingId != null">
                goods_marketing_id,
            </if>
            <if test="goodsActiveMarketingId != null">
                goods_active_marketingId,
            </if>

            <if test="buyTime != null">
                buy_time,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="evaluateFlag != null">
                evaluate_flag,
            </if>
            <if test="distinctId != null">
                distinct_id,
            </if>
            <if test="subjectName != null">
                subject_name,
            </if>
            <if test="subjectId != null">
                subject_id,
            </if>
            <if test="subjectGoodsPrice != null">
                subject_goods_price,
            </if>
            <if test="goodsInfoName != null">
                goods_info_name,
            </if>
            <if test="goodsImg != null">
                goods_info_image,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderGoodsId != null">
                #{orderGoodsId,jdbcType=BIGINT},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoId != null">
                #{goodsInfoId,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoNum != null">
                #{goodsInfoNum,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoOldPrice != null">
                #{goodsInfoOldPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsInfoPrice != null">
                #{goodsInfoPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsCouponPrice != null">
                #{goodsCouponPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsInfoSumPrice != null">
                #{goodsInfoSumPrice,jdbcType=DECIMAL},
            </if>
            <if test="haveGiftStatus != null">
                #{haveGiftStatus,jdbcType=CHAR},
            </if>
            <if test="haveCouponStatus != null">
                #{haveCouponStatus,jdbcType=CHAR},
            </if>
            <if test="goodsMarketingId != null">
                #{goodsMarketingId,jdbcType=BIGINT},
            </if>
            <if test="goodsActiveMarketingId != null">
                #{goodsActiveMarketingId,jdbcType=BIGINT},
            </if>
            <if test="buyTime != null">
                #{buyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
            <if test="evaluateFlag != null">
                #{evaluateFlag,jdbcType=CHAR},
            </if>
            <if test="distinctId != null">
                #{distinctId,jdbcType=CHAR},
            </if>
            <if test="subjectName != null">
                #{subjectName,jdbcType=VARCHAR},
            </if>
            <if test="subjectId != null">
                #{subjectId,jdbcType=BIGINT},
            </if>
            <if test="subjectGoodsPrice != null">
                #{subjectGoodsPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsInfoName != null">
                #{goodsInfoName,jdbcType=VARCHAR},
            </if>
            <if test="goodsImg != null">
                #{goodsImg,jdbcType=VARCHAR},
            </if>
        </trim>


    </insert>
    <!-- 查询刚刚插入的Id -->
    <select id="selectLastId" resultType="java.lang.Long">
        select LAST_INSERT_ID()
    </select>


    <insert id="insertSelective" parameterType="com.ylife.order.model.OrderGoods">
        insert into np_order_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderGoodsId != null">
                order_goods_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="goodsInfoId != null">
                goods_info_id,
            </if>
            <if test="goodsInfoNum != null">
                goods_info_num,
            </if>
            <if test="goodsInfoOldPrice != null">
                goods_info_old_price,
            </if>
            <if test="goodsInfoPrice != null">
                goods_info_price,
            </if>
            <if test="goodsCouponPrice != null">
                goods_coupon_price,
            </if>
            <if test="goodsInfoSumPrice != null">
                goods_info_sum_price,
            </if>
            <if test="haveGiftStatus != null">
                have_gift_status,
            </if>
            <if test="haveCouponStatus != null">
                have_coupon_status,
            </if>
            <if test="goodsMarketingId != null">
                goods_marketing_id,
            </if>
            <if test="buyTime != null">
                buy_time,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="evaluateFlag != null">
                evaluate_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderGoodsId != null">
                #{orderGoodsId,jdbcType=BIGINT},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoId != null">
                #{goodsInfoId,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoNum != null">
                #{goodsInfoNum,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoOldPrice != null">
                #{goodsInfoOldPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsInfoPrice != null">
                #{goodsInfoPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsCouponPrice != null">
                #{goodsCouponPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsInfoSumPrice != null">
                #{goodsInfoSumPrice,jdbcType=DECIMAL},
            </if>
            <if test="haveGiftStatus != null">
                #{haveGiftStatus,jdbcType=CHAR},
            </if>
            <if test="haveCouponStatus != null">
                #{haveCouponStatus,jdbcType=CHAR},
            </if>
            <if test="goodsMarketingId != null">
                #{goodsMarketingId,jdbcType=BIGINT},
            </if>
            <if test="buyTime != null">
                #{buyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
            <if test="evaluateFlag != null">
                #{evaluateFlag,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ylife.order.model.OrderGoods">
        update np_order_goods
        <set>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoId != null">
                goods_info_id = #{goodsInfoId,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoNum != null">
                goods_info_num = #{goodsInfoNum,jdbcType=BIGINT},
            </if>
            <if test="goodsInfoOldPrice != null">
                goods_info_old_price = #{goodsInfoOldPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsInfoPrice != null">
                goods_info_price = #{goodsInfoPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsCouponPrice != null">
                goods_coupon_price = #{goodsCouponPrice,jdbcType=DECIMAL},
            </if>
            <if test="goodsInfoSumPrice != null">
                goods_info_sum_price = #{goodsInfoSumPrice,jdbcType=DECIMAL},
            </if>
            <if test="haveGiftStatus != null">
                have_gift_status = #{haveGiftStatus,jdbcType=CHAR},
            </if>
            <if test="haveCouponStatus != null">
                have_coupon_status = #{haveCouponStatus,jdbcType=CHAR},
            </if>
            <if test="goodsMarketingId != null">
                goods_marketing_id = #{goodsMarketingId,jdbcType=BIGINT},
            </if>
            <if test="buyTime != null">
                buy_time = #{buyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
            <if test="evaluateFlag != null">
                evaluate_flag = #{evaluateFlag,jdbcType=CHAR},
            </if>
        </set>
        where order_goods_id = #{orderGoodsId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ylife.order.model.OrderGoods">
        update np_order_goods
        set order_id = #{orderId,jdbcType=BIGINT},
        goods_id = #{goodsId,jdbcType=BIGINT},
        goods_info_id = #{goodsInfoId,jdbcType=BIGINT},
        goods_info_num = #{goodsInfoNum,jdbcType=BIGINT},
        goods_info_old_price = #{goodsInfoOldPrice,jdbcType=DECIMAL},
        goods_info_price = #{goodsInfoPrice,jdbcType=DECIMAL},
        goods_coupon_price = #{goodsCouponPrice,jdbcType=DECIMAL},
        goods_info_sum_price = #{goodsInfoSumPrice,jdbcType=DECIMAL},
        have_gift_status = #{haveGiftStatus,jdbcType=CHAR},
        have_coupon_status = #{haveCouponStatus,jdbcType=CHAR},
        goods_marketing_id = #{goodsMarketingId,jdbcType=BIGINT},
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
        del_flag = #{delFlag,jdbcType=CHAR},
        evaluate_flag = #{evaluateFlag,jdbcType=CHAR}
        where order_goods_id = #{orderGoodsId,jdbcType=BIGINT}
    </update>
    <select id="selectGoodsInfoCount" resultType="java.lang.Long" parameterType="java.util.Map">
        select sum(goods.goods_info_num) from np_order_goods goods,np_order ord where
        ord.order_id=goods.order_id and goods.goods_info_id = #{goodsInfoId}
        and ord.customer_id=#{customerId}
        and ord.create_time &gt; #{starTime} and ord.order_status!='4'
    </select>

    <!-- 更新订单货品表 标记为退单货品 -->
    <update id="updateOrderGoodsBack" parameterType="java.util.Map">
        update np_order_goods set back_flag = '1',back_order_code = #{backOrderCode,jdbcType=VARCHAR}
        where order_id = #{orderId,jdbcType=BIGINT} and goods_info_id = #{goodsInfoId,jdbcType=BIGINT}
    </update>

    <select id="queryOrderGoodsByOrderIdAndBackCode" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from np_order_goods where order_id = #{orderId,jdbcType=BIGINT} and back_flag = '1'
    </select>

    <select id="queryOrderGoodsIdList" resultType="java.lang.Long">
        select goods_id from (select goods_id,count(goods_id) as count from np_order_goods group by goods_id) as good
        ORDER BY good.count desc LIMIT 0,8;
    </select>
</mapper>